var documenterSearchIndex = {"docs":
[{"location":"stat/#Statistics","page":"Statistics","title":"Statistics","text":"","category":"section"},{"location":"stat/","page":"Statistics","title":"Statistics","text":"myrange\nstar_pval","category":"page"},{"location":"stat/#xfun.myrange","page":"Statistics","title":"xfun.myrange","text":"myrange(x)\n\nReturn the range of x by columns, ignoring NaN. Note that NaN will results an Int array as Float64 array.\n\nExamples\n\njulia> myrange([1, 2, 3])\n(1, 3)\n\njulia> myrange([1, NaN, 3])\n(1.0, 3.0)\n\njulia> myrange([1 2; 3 4; 5 6])\n2×2 Matrix{Int64}:\n 1  2\n 5  6\n\n\n\n\n\n","category":"function"},{"location":"stat/#xfun.star_pval","page":"Statistics","title":"xfun.star_pval","text":"star_pval(x)\n\nAnnotate significance with symbols. Refer to ?symnum in R.\n\nExamples\n\njulia> star_pval([0.0001, 0.1])\n2-element Vector{String}:\n \"1.00e-04 (***)\"\n \"1.00e-01\"\n\n\n\n\n\n","category":"function"},{"location":"str/#String","page":"String","title":"String","text":"","category":"section"},{"location":"str/","page":"String","title":"String","text":"split_keystr","category":"page"},{"location":"str/#xfun.split_keystr","page":"String","title":"xfun.split_keystr","text":"split_keystr(str)\n\nSplit string with format StrNum_StrNum into key pairs\n\njulia> split_keystr(\"a123_b234\")\nDict{Any, Any} with 2 entries:\n  \"b\" => 234\n  \"a\" => 123\n\n\n\n\n\n","category":"function"},{"location":"plot/#Plot","page":"Plot","title":"Plot","text":"","category":"section"},{"location":"plot/","page":"Plot","title":"Plot","text":"save_plots\nsave_grid_plots","category":"page"},{"location":"plot/#xfun.save_plots","page":"Plot","title":"xfun.save_plots","text":"save_plots(ps; output)\n\nSave multi-images into a pdf file, if output is unspecified (default), the resulting file is /tmp/all.pdf.\n\n\n\n\n\n","category":"function"},{"location":"plot/#xfun.save_grid_plots","page":"Plot","title":"xfun.save_grid_plots","text":"save_grid_plots(ps)\n\nCombine multi-plots into a nrow x ncol grid, where the number of rows and columns are automatically determined. The output file is /tmp/all.png\n\nIf the backend is PGFPlotsXBackend, it will call save_plots instead.\n\n\n\n\n\n","category":"function"},{"location":"plot/#Examples","page":"Plot","title":"Examples","text":"","category":"section"},{"location":"plot/","page":"Plot","title":"Plot","text":"using xfun\nusing Plots\nfigs = Plots.Plot[]\nx = 0:0.1:1\nfor i in 1:6\n    push!(figs, plot(x, x.^i, title = \"degree = $i\"))\nend\nsave_grid_plots(figs)","category":"page"},{"location":"plot/","page":"Plot","title":"Plot","text":"(Image: )","category":"page"},{"location":"table/#Table","page":"Table","title":"Table","text":"","category":"section"},{"location":"table/","page":"Table","title":"Table","text":"print2tex\ntex2png","category":"page"},{"location":"table/#xfun.print2tex","page":"Table","title":"xfun.print2tex","text":"print2tex()\n\nPrint a structural result to a latex table.\n\nExamples\n\nTODO: It seems that jldoctest does not generate result files ex1.tex in Documenter.jl.\n\njulia> μ = [[1 2 3 4; 5 6 7 8], [4 3 2 1; 8 7 6 5]]\n2-element Vector{Matrix{Int64}}:\n [1 2 3 4; 5 6 7 8]\n [4 3 2 1; 8 7 6 5]\n\njulia> σ = [ones(Int, 2, 4), ones(Int,2,4)]\n2-element Vector{Matrix{Int64}}:\n [1 1 1 1; 1 1 1 1]\n [1 1 1 1; 1 1 1 1]\n\njulia> print2tex(μ, σ, [\"A\", \"B\"], [\"a\", \"b\"], [\"1\",\"2\"], [\"x\", \"y\"], file = \"ex1.tex\")\nnoc = 0\n14\n\njulia> tex2png(\"ex1.tex\")\n\n\n\n\n\n","category":"function"},{"location":"table/#xfun.tex2png","page":"Table","title":"xfun.tex2png","text":"tex2png()\n\nRender a latex table source file into an image via https://quicklatex.com/js/quicklatex.js\n\n\n\n\n\n","category":"function"},{"location":"table/#Examples","page":"Table","title":"Examples","text":"","category":"section"},{"location":"table/#Multi-rows-and-Multi-columns","page":"Table","title":"Multi-rows and Multi-columns","text":"","category":"section"},{"location":"table/","page":"Table","title":"Table","text":"using xfun\nμ = [rand(3, 4), rand(3, 4)]\nσ = [rand(3, 4), rand(3, 4)]\nprint2tex(μ, σ, [\"A\", \"B\"], [\"a\", \"b\"], [\"1\",\"2\",\"3\"], [\"x\", \"y\"], file = \"ex1.tex\")\ntex2png(\"ex1.tex\")","category":"page"},{"location":"table/","page":"Table","title":"Table","text":"(Image: )","category":"page"},{"location":"table/#Add-columns-on-the-left","page":"Table","title":"Add columns on the left","text":"","category":"section"},{"location":"table/","page":"Table","title":"Table","text":"others = [rand(3, 1), rand(3, 1)]\nothers_σ = [rand(3, 1), rand(3, 1)]\nprint2tex(μ, σ, [\"A\", \"B\"], [\"a\", \"b\"], [\"1\",\"2\",\"3\"], [\"x\", \"y\"], file = \"ex2.tex\", other_cols = others, other_col_names = [\"other\"], other_cols_σ = others_σ)\ntex2png(\"ex2.tex\")","category":"page"},{"location":"table/","page":"Table","title":"Table","text":"(Image: )","category":"page"},{"location":"table/#Add-columns-on-the-right","page":"Table","title":"Add columns on the right","text":"","category":"section"},{"location":"table/","page":"Table","title":"Table","text":"right = [[rand(3), rand(3)]]\nprint2tex(μ, σ, [\"A\", \"B\"], [\"a\", \"b\"], [\"1\",\"2\",\"3\"], [\"x\", \"y\"], file = \"ex3.tex\", other_cols = others, other_col_names = [\"other\"], other_cols_σ = others_σ, right_cols = right, right_col_names = [\"right\"])\ntex2png(\"ex3.tex\")","category":"page"},{"location":"table/","page":"Table","title":"Table","text":"(Image: )","category":"page"},{"location":"sys/#System","page":"System","title":"System","text":"","category":"section"},{"location":"sys/#Monitor-Memory-Allocation","page":"System","title":"Monitor Memory Allocation","text":"","category":"section"},{"location":"sys/","page":"System","title":"System","text":"memuse","category":"page"},{"location":"sys/#xfun.memuse","page":"System","title":"xfun.memuse","text":"memuse()\n\nGet the memory usage in MB of current process.\n\nSee also: https://tech.hohoweiya.xyz/julia/#memory-allocation\n\n\n\n\n\n","category":"function"},{"location":"sys/","page":"System","title":"System","text":"for i = 1:3\n    a = zeros(1024, 1024, 5, 10);\n    memuse()\nend","category":"page"},{"location":"#xfun.jl-Documentation","page":"xfun.jl Documentation","title":"xfun.jl Documentation","text":"","category":"section"},{"location":"","page":"xfun.jl Documentation","title":"xfun.jl Documentation","text":"CurrentModule = xfun","category":"page"},{"location":"","page":"xfun.jl Documentation","title":"xfun.jl Documentation","text":"xfun.jl is a Julia package that collects util functions that I often used.","category":"page"},{"location":"","page":"xfun.jl Documentation","title":"xfun.jl Documentation","text":"Pages = [\"stat.md\", \"str.md\", \"sys.md\", \"plot.md\", \"table.md\"]\nDepth = 2","category":"page"}]
}
